"""Projeta o filtro passa-faixa e retorna os coeficientes SOS."""
import scipy.signal as signal
import numpy as np

def design_filter_1(estado, SAMPLE_RATE):
    if estado == True:
        FILTER_BAND = [80, 800]
        SECTIONS = 18
        ATTENUATION_STOPBAND = 80
        # Coeficientes b1, b2 ... do filtro passa-faixa (NUMERADOR)
        NUM = np.array([
        [0.8624198568921, 0, 0],
        [1, -1.998670826668, 1],
        [0.8624198568921, 0, 0],
        [1, -1.888086620568, 1],
        [0.8460114408911, 0, 0],
        [1, -1.998735632308, 1],
        [0.8460114408911, 0, 0],
        [1, -1.882517082897, 1],
        [0.82103877482, 0, 0],
        [1, -1.99886147684, 1],
        [0.82103877482, 0, 0],
        [1, -1.86994955622, 1],
        [0.7841933038325, 0, 0],
        [1, -1.99904005788, 1],
        [0.7841933038325, 0, 0],
        [1, -1.846676605314, 1],
        [0.7302088800371, 0, 0],
        [1, -1.999257176309, 1],
        [0.7302088800371, 0, 0],
        [1, -1.804047177023, 1],
        [0.651403122932, 0, 0],
        [1, -1.999491321984, 1],
        [0.651403122932, 0, 0],
        [1, -1.720144621802, 1],
        [0.5386986683487, 0, 0],
        [1, -1.999713389608, 1],
        [0.5386986683487, 0, 0],
        [1, -1.528828001397, 1],
        [0.3889954546249, 0, 0],
        [1, -1.999889347166, 1],
        [0.3889954546249, 0, 0],
        [1, -0.9720823575347, 1],
        [0.2369655318849, 0, 0],
        [1, -1.999987250873, 1],
        [0.2369655318849, 0, 0],
        [1, 1.000464398742, 1],
        [1, 0, 0]
        ])
        # Coeficientes do denominador (DENOMINADOR)
        DEN = np.array([
        [1, 0, 0],
        [1, -1.891760963501, 0.9804499558419],
        [1, 0, 0],
        [1, -1.995609509674, 0.9972774801027],
        [1, 0, 0],
        [1, -1.850802901145, 0.9402862726036],
        [1, 0, 0],
        [1, -1.990166632035, 0.9917807275078],
        [1, 0, 0],
        [1, -1.802227392722, 0.8950044447261],
        [1, 0, 0],
        [1, -1.98458645157, 0.9861004094676],
        [1, 0, 0],
        [1, -1.741039709033, 0.8397668069517],
        [1, 0, 0],
        [1, -1.978751776626, 0.9801255926472],
        [1, 0, 0],
        [1, -1.661550732935, 0.7691472101068],
        [1, 0, 0],
        [1, -1.972605452494, 0.9738093768699],
        [1, 0, 0],
        [1, -1.966221053753, 0.9672406277127],
        [1, 0, 0],
        [1, -1.558794546743, 0.6782816849278],
        [1, 0, 0],
        [1, -1.959933615913, 0.9607756072767],
        [1, 0, 0],
        [1, -1.43380333782, 0.5675188073371],
        [1, 0, 0],
        [1, -1.954521188554, 0.9552191991802],
        [1, 0, 0],
        [1, -1.304960680982, 0.452751288454],
        [1, 0, 0],
        [1, -1.951240879494, 0.9518569463744],
        [1, 0, 0],
        [1, -1.216773371593, 0.3738062390593],
        [1, 0, 0]
        ])
    else:
        FILTER_BAND = [15, 250]
        SECTIONS = 10
        ATTENUATION_STOPBAND = 100
        # Coeficientes b1, b2 ... do filtro passa-faixa (NUMERADOR)
        NUM = np.array([
            [0.3189842366757, 0, 0],
            [1, -1.999961380843, 1],
            [0.3189842366757, 0, 0],
            [1, -1.988800736477, 1],
            [0.28928576234, 0, 0],
            [1, -1.999967906269, 1],
            [0.28928576234, 0, 0],
            [1, -1.986531302625, 1],
            [0.2324974610043, 0, 0],
            [1, -1.999979060849, 1],
            [0.2324974610043, 0, 0],
            [1, -1.97939324409, 1],
            [0.1517644269888, 0, 0],
            [1, -1.999991041153, 1],
            [0.1517644269888, 0, 0],
            [1, -1.952166055553, 1],
            [0.05497448138232, 0, 0],
            [1, -1.99999891036, 1],
            [0.05497448138232, 0, 0],
            [1, -1.637980853257, 1],
            [1, 0, 0]
        ])
        # Coeficientes a1, a2 ... do filtro passa-faixa (DENOMINADOR)
        DEN = np.array([
            [1, 0, 0],
            [1, -1.990727776199, 0.9928297437502],
            [1, 0, 0],
            [1, -1.997550834792, 0.9977560877147],
            [1, 0, 0],
            [1, -1.977271268252, 0.9792374469158],
            [1, 0, 0],
            [1, -1.992852566386, 0.9930699927101],
            [1, 0, 0],
            [1, -1.966276616914, 0.9679801879131],
            [1, 0, 0],
            [1, -1.987449619096, 0.9876984761149],
            [1, 0, 0],
            [1, -1.960203939386, 0.9615195445052],
            [1, 0, 0],
            [1, -1.980602269125, 0.9809223855052],
            [1, 0, 0],
            [1, -1.971401883989, 0.9718926701358],
            [1, 0, 0],
            [1, -1.962134367413, 0.9629892655753],
            [1, 0, 0]
        ])

    sos = signal.iirfilter(
        N=SECTIONS,
        Wn=FILTER_BAND,
        btype='band',
        ftype='cheby2',
        rs=ATTENUATION_STOPBAND,
        fs=SAMPLE_RATE,
        output='sos'
    )
    # Montar o array SOS com os coeficientes 
    sos = np.hstack([NUM, DEN])
    return sos