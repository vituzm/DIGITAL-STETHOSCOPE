"""Projeta o filtro passa-faixa e retorna os coeficientes SOS."""
import scipy.signal as signal
import numpy as np

def design_filter_1(estado, SAMPLE_RATE):
    if estado == True:
        FILTER_BAND = [80, 800]
        SECTIONS = 18
        ATTENUATION_STOPBAND = 80
        # Coeficientes b1, b2 ... do filtro passa-faixa (NUMERADOR)
        NUM = np.array([
        [30, 0, 0],
        [1, 1.01537696177, 1],
        [0.8624215077132, 0, 0],
        [1, -0.957975546356, 1],
        [0.8459225468631, 0, 0],
        [1, -1.522320511192, 1],
        [0.8459225468631, 0, 0],
        [1, -1.716981256615, 1],
        [0.8208629901193, 0, 0],
        [1, -1.802449564652, 1],
        [0.8208629901193, 0, 0],
        [1, -1.845886673561, 1],
        [0.7839355008614, 0, 0],
        [1, -1.869598954455, 1],
        [0.7839355008614, 0, 0],
        [1, -1.882401482263, 1],
        [0.7298866851073, 0, 0],
        [1, -1.999989508328, 1],
        [0.7298866851073, 0, 0],
        [1, -1.999908793826, 1],
        [0.6510730804096, 0, 0],
        [1, -1.999763089655, 1],
        [0.6510730804096, 0, 0],
        [1, -1.999578063759, 1],
        [0.5385113368035, 0, 0],
        [1, -1.999381647958, 1],
        [0.5385113368035, 0, 0],
        [1, -1.888074310874, 1],
        [0.3892916716689, 0, 0],
        [1, -1.999198346466, 1],
        [0.3892916716689, 0, 0],
        [1, -1.99904676749, 1],
        [0.2383109440107, 0, 0],
        [1, -1.998939523835, 1],
        [0.2383109440107, 0, 0],
        [1, -1.998884162166, 1],
        [1, 0, 0]
        ])
        # Coeficientes do denominador (DENOMINADOR)
        DEN = np.array([
        [1, 0, 0],
        [1, -1.20700945256, 0.3678757103012],
        [1, 0, 0],
        [1, -1.296131338331, 0.4469155885525],
        [1, 0, 0],
        [1, -1.426496794868, 0.5621220047994],
        [1, 0, 0],
        [1, -1.553162179071, 0.6736647435938],
        [1, 0, 0],
        [1, -1.657458680739, 0.7654548946935],
        [1, 0, 0],
        [1, -1.738255045168, 0.8369902062885],
        [1, 0, 0],
        [1, -1.800527201666, 0.8930761558637],
        [1, 0, 0],
        [1, -1.850016208692, 0.9391429688782],
        [1, 0, 0],
        [1, -1.955925290836, 0.9564283145795],
        [1, 0, 0],
        [1, -1.958696500591, 0.9592690267654],
        [1, 0, 0],
        [1, -1.963367158848, 0.9640623367793],
        [1, 0, 0],
        [1, -1.968922080912, 0.9697692865017],
        [1, 0, 0],
        [1, -1.97467874598, 0.9756844771532],
        [1, 0, 0],
        [1, -1.891778910027, 0.9800644916711],
        [1, 0, 0],
        [1, -1.980309779234, 0.9814621200516],
        [1, 0, 0],
        [1, -1.98571818612, 0.9869917568729],
        [1, 0, 0],
        [1, -1.990931293727, 0.9922915690354],
        [1, 0, 0],
        [1, -1.996037436753, 0.9974442523601],
        [1, 0, 0]
        ])
    else:
        FILTER_BAND = [1, 300]
        SECTIONS = 17
        ATTENUATION_STOPBAND = 80
        # Coeficientes b1, b2 ... do filtro passa-faixa (NUMERADOR)
        NUM = np.array([
            [30, 0, 0],
            [1, 0, -1],
            [0.8487099562188, 0, 0],
            [1, -1.610067301935, 1],
            [0.8360800872691, 0, 0],
            [1, -1.89033181927, 1],
            [0.8360800872691, 0, 0],
            [1, -1.946926615562, 1],
            [0.8130760583968, 0, 0],
            [1, -1.966928479924, 1],
            [0.8130760583968, 0, 0],
            [1, -1.976008674835, 1],
            [0.7755658789579, 0, 0],
            [1, -1.980650022054, 1],
            [0.7755658789579, 0, 0],
            [1, -1.983059789468, 1],
            [0.7161887079907, 0, 0],
            [1, -1.984105299755, 1],
            [0.7161887079907, 0, 0],
            [1, -1.999998996125, 1],
            [0.6229629380522, 0, 0],
            [1, -1.999996153553, 1],
            [0.6229629380522, 0, 0],
            [1, -1.999991936279, 1],
            [0.4796785210937, 0, 0],
            [1, -1.999986993726, 1],
            [0.4796785210937, 0, 0],
            [1, -1.999982030117, 1],
            [0.2762776227039, 0, 0],
            [1, -1.99997769382, 1],
            [0.2762776227039, 0, 0],
            [1, -1.999974505332, 1],
            [0.08913560484438, 0, 0],
            [1, -1.999972821241, 1],
            [1, 0, 0]
        ])
        # Coeficientes a1, a2 ... do filtro passa-faixa (DENOMINADOR)
        DEN = np.array([
        [1, 0, 0],
        [1, -1.821129014042, 0.8217287903112],
        [1, 0, 0],
        [1, -1.677732538091, 0.7066480968014],
        [1, 0, 0],
        [1, -1.742385754219, 0.7670997054512],
        [1, 0, 0],
        [1, -1.809551152542, 0.8299491575685],
        [1, 0, 0],
        [1, -1.863960845426, 0.880960135951],
        [1, 0, 0],
        [1, -1.904636318927, 0.9192535454531],
        [1, 0, 0],
        [1, -1.935022786871, 0.9480902717923],
        [1, 0, 0],
        [1, -1.958760774504, 0.9709258698694],
        [1, 0, 0],
        [1, -1.978805315659, 0.9905976265814],
        [1, 0, 0],
        [1, -1.993328265801, 0.9933409146766],
        [1, 0, 0],
        [1, -1.99379754289, 0.9938128928799],
        [1, 0, 0],
        [1, -1.99450543715, 0.9945247308488],
        [1, 0, 0],
        [1, -1.995375024064, 0.995398856207],
        [1, 0, 0],
        [1, -1.996340293445, 0.9963686075057],
        [1, 0, 0],
        [1, -1.997355102841, 0.9973872817209],
        [1, 0, 0],
        [1, -1.99839227629, 0.9984272749209],
        [1, 0, 0],
        [1, -1.999438549223, 0.9994750382602],
        [1, 0, 0]
        ])

    sos = signal.iirfilter(
        N=SECTIONS,
        Wn=FILTER_BAND,
        btype='band',
        ftype='cheby2',
        rs=ATTENUATION_STOPBAND,
        fs=SAMPLE_RATE,
        output='sos'
    )
    # Montar o array SOS com os coeficientes 
    sos = np.hstack([NUM, DEN])
    return sos