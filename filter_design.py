"""Projeta o filtro passa-faixa e retorna os coeficientes SOS."""
import scipy.signal as signal
import numpy as np

def design_filter_1(estado, SAMPLE_RATE):
    if estado == True:
        FILTER_BAND = [80, 800]
        SECTIONS = 18
        ATTENUATION_STOPBAND = 80
        # Coeficientes b1, b2 ... do filtro passa-faixa (NUMERADOR)
        NUM = np.array([
        [30, 0, 0],
        [1, 1.676380537548, 1],
        [0.864559846153, 0, 0],
        [1, 0.2655703595299, 1],
        [0.8408759178759, 0, 0],
        [1, -0.6622373444523, 1],
        [0.8408759178759, 0, 0],
        [1, -1.12041938443, 1],
        [0.8094829579152, 0, 0],
        [1, -1.355264999309, 1],
        [0.8094829579152, 0, 0],
        [1, -1.484049857394, 1],
        [0.7674171334734, 0, 0],
        [1, -1.557285788516, 1],
        [0.7674171334734, 0, 0],
        [1, -1.597729322102, 1],
        [0.7108423832156, 0, 0],
        [1, -1.999963288019, 1],
        [0.7108423832156, 0, 0],
        [1, -1.99968074177, 1],
        [0.6356263609388, 0, 0],
        [1, -1.999170196556, 1],
        [0.6356263609388, 0, 0],
        [1, -1.998520979005, 1],
        [0.5399554866286, 0, 0],
        [1, -1.997830759886, 1],
        [0.5399554866286, 0, 0],
        [1, -1.615857379668, 1],
        [0.4321846182286, 0, 0],
        [1, -1.997185711647, 1],
        [0.4321846182286, 0, 0],
        [1, -1.996651662441, 1],
        [0.3476308072752, 0, 0],
        [1, -1.996273484324, 1],
        [0.3476308072752, 0, 0],
        [1, -1.996078155103, 1],
        [1, 0, 0]
    ])
        # Coeficientes do denominador (DENOMINADOR)
        DEN = np.array([
        [1, 0, 0],
        [1, -0.7044925255148, 0.1309517491904],
        [1, 0, 0],
        [1, -0.803014921193, 0.2150998946154],
        [1, 0, 0],
        [1, -0.9595207195024, 0.3477946449825],
        [1, 0, 0],
        [1, -1.127558783878, 0.4893088094701],
        [1, 0, 0],
        [1, -1.279213510322, 0.6169709659732],
        [1, 0, 0],
        [1, -1.405392306083, 0.7245217699512],
        [1, 0, 0],
        [1, -1.507320569115, 0.8143552360477],
        [1, 0, 0],
        [1, -1.590040491804, 0.8920205310501],
        [1, 0, 0],
        [1, -1.918404417059, 0.9201269456042],
        [1, 0, 0],
        [1, -1.923188698142, 0.9251537338392],
        [1, 0, 0],
        [1, -1.931312417356, 0.9337071557209],
        [1, 0, 0],
        [1, -1.941066036297, 0.9439963142279],
        [1, 0, 0],
        [1, -1.951277156605, 0.9547693342475],
        [1, 0, 0],
        [1, -1.659431500107, 0.9639768738161],
        [1, 0, 0],
        [1, -1.961372759497, 0.9653882409496],
        [1, 0, 0],
        [1, -1.971180528835, 0.9756325172634],
        [1, 0, 0],
        [1, -1.980750031523, 0.9855184888039],
        [1, 0, 0],
        [1, -1.990242369465, 0.9951863638321],
        [1, 0, 0]
        ])
    else:
        FILTER_BAND = [1, 300]
        SECTIONS = 17
        ATTENUATION_STOPBAND = 80
        # Coeficientes b1, b2 ... do filtro passa-faixa (NUMERADOR)
        NUM = np.array([
        [30, 0, 0],
        [1, 0, -1],
        [0.8479634777073, 0, 0],
        [1, -0.8935125218375, 1],
        [0.8317722191254, 0, 0],
        [1, -1.637030427031, 1],
        [0.8317722191254, 0, 0],
        [1, -1.818245489381, 1],
        [0.8051276198966, 0, 0],
        [1, -1.885342355237, 1],
        [0.8051276198966, 0, 0],
        [1, -1.916356217531, 1],
        [0.7638730460465, 0, 0],
        [1, -1.93234539163, 1],
        [0.7638730460465, 0, 0],
        [1, -1.940683653941, 1],
        [0.7010969822921, 0, 0],
        [1, -1.944309172843, 1],
        [0.7010969822921, 0, 0],
        [1, -1.999996479151, 1],
        [0.6065111904079, 0, 0],
        [1, -1.999986508997, 1],
        [0.6065111904079, 0, 0],
        [1, -1.999971715757, 1],
        [0.4684764549925, 0, 0],
        [1, -1.999954376321, 1],
        [0.4684764549925, 0, 0],
        [1, -1.999936960805, 1],
        [0.287636825599, 0, 0],
        [1, -1.999921744521, 1],
        [0.287636825599, 0, 0],
        [1, -1.999910554922, 1],
        [0.1554434200974, 0, 0],
        [1, -1.999904644465, 1],
        [1, 0, 0]
        ])
        # Coeficientes a1, a2 ... do filtro passa-faixa (DENOMINADOR)
        DEN = np.array([
        [1, 0, 0],
        [1, -1.687154354176, 0.6891131598051],
        [1, 0, 0],
        [1, -1.429810822769, 0.5190211842894],
        [1, 0, 0],
        [1, -1.529880315737, 0.6081199234102],
        [1, 0, 0],
        [1, -1.639479901268, 0.7058555868335],
        [1, 0, 0],
        [1, -1.732721290345, 0.7893127212695],
        [1, 0, 0],
        [1, -1.805055467188, 0.8545680624777],
        [1, 0, 0],
        [1, -1.860414561797, 0.9052617461098],
        [1, 0, 0],
        [1, -1.904200935102, 0.946383924818],
        [1, 0, 0],
        [1, -1.941258794606, 0.9825080592188],
        [1, 0, 0],
        [1, -1.987521744181, 0.987565971482],
        [1, 0, 0],
        [1, -1.988390022138, 0.9884437095822],
        [1, 0, 0],
        [1, -1.989701179217, 0.9897686887124],
        [1, 0, 0],
        [1, -1.991314141224, 0.9913975728538],
        [1, 0, 0],
        [1, -1.993107691584, 0.9932068663696],
        [1, 0, 0],
        [1, -1.994996998902, 0.9951097709085],
        [1, 0, 0],
        [1, -1.996932055862, 0.9970547729259],
        [1, 0, 0],
        [1, -1.998888416725, 0.9990164221638],
        [1, 0, 0]
        ])

    sos = signal.iirfilter(
        N=SECTIONS,
        Wn=FILTER_BAND,
        btype='band',
        ftype='cheby2',
        rs=ATTENUATION_STOPBAND,
        fs=SAMPLE_RATE,
        output='sos'
    )
    # Montar o array SOS com os coeficientes 
    sos = np.hstack([NUM, DEN])
    return sos